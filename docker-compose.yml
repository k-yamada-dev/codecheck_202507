services:
  db:
    image: postgres:17-alpine
    container_name: acuagraphy-online_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: acuas_dev
    ports:
      - '5432:5432'
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      retries: 5

  pubsub:
    build:
      context: .
      dockerfile: docker/pubsub.Dockerfile
    ports: ['8085:8085']
    restart: unless-stopped

  web:
    build:
      context: .
      dockerfile: docker/web.prod.Dockerfile
    ports:
      - '3000:3000'
    # Use an env file to provide secrets at runtime (do NOT commit .env to VCS).
    # Create a `.env` next to docker-compose.yml containing sensitive variables like:
    #   FIREBASE_SERVICE_ACCOUNT_JSON='{"type": "...", "private_key": "...", ...}'
    # You can also combine env_file with build args for values needed at build time.
    env_file:
      - .env
    environment:
      DATABASE_URL: '${DATABASE_URL}'
      PUBSUB_EMULATOR_HOST: '${PUBSUB_EMULATOR_HOST}'
      PUBSUB_PROJECT_ID: '${PUBSUB_PROJECT_ID}'
      PUBSUB_TOPIC_JOBS: '${PUBSUB_TOPIC_JOBS}'
      NEXT_PUBLIC_API_BASE: '${NEXT_PUBLIC_API_BASE}'
      GCS_BUCKET: '${GCS_BUCKET}'
      NEXTAUTH_SECRET: '${NEXTAUTH_SECRET}'
      NEXTAUTH_URL: '${NEXTAUTH_URL}'
      FIREBASE_SERVICE_ACCOUNT_JSON: '${FIREBASE_SERVICE_ACCOUNT_JSON}'
      NEXT_PUBLIC_FIREBASE_CONFIG: '${NEXT_PUBLIC_FIREBASE_CONFIG}'
    # Mount local secrets directory so runtime can read GOOGLE_CLOUD_KEYFILE
    # (do NOT commit the files; this mount is for local development only)
    volumes:
      - ./apps/web/config/secrets/acuasaas-credentials.json:/app/apps/web/config/secrets/acuasaas-credentials.json:ro
    depends_on:
      - db
      - pubsub

  worker:
    build:
      context: .
      dockerfile: docker/worker.Dockerfile
    volumes:
      - .:/work
      - node_modules_worker:/work/node_modules
    working_dir: /work
    command: sh -c "until curl -s --max-time 1 \"http://pubsub:8085/\" >/dev/null 2>&1; do echo 'waiting for pubsub'; sleep 1; done; /work/scripts/init_pubsub_emulator.sh && pnpm -C /work install && pnpm -C /work/packages/db build && pnpm -C /work/packages/contracts build && pnpm -C /work/apps/worker build && pnpm -C /work/apps/worker start"
    environment:
      NODE_ENV: development
      CI: 'true'
      HUSKY: '0'
      DATABASE_URL: postgresql://postgres:postgres@db:5432/acuas_dev
      PUBSUB_PROJECT_ID: local-dev
      PUBSUB_TOPIC_JOBS: jobs
      PUBSUB_EMULATOR_HOST: pubsub:8085
      WORKER_CONCURRENCY: '1'
      JOB_VISIBILITY_TIMEOUT_SEC: '600'
    depends_on: [db, pubsub]

volumes:
  db_data:
  node_modules_worker:
